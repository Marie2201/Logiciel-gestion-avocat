"""ajout colonne dans users et création nouvelle table trustedDevice

Revision ID: e94ea9568fd1
Revises: a029af8c08fa
Create Date: 2025-09-01 21:58:34.962910

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e94ea9568fd1'
down_revision = 'a029af8c08fa'
branch_labels = None
depends_on = None


def _col_info(table, col):
    conn = op.get_bind()
    row = conn.execute(sa.text("""
        SELECT DATA_TYPE AS dt, CHARACTER_MAXIMUM_LENGTH AS clen
        FROM INFORMATION_SCHEMA.COLUMNS
        WHERE TABLE_SCHEMA = DATABASE()
          AND TABLE_NAME = :t AND COLUMN_NAME = :c
    """), {"t": table, "c": col}).mappings().first()
    return (row["dt"], row["clen"]) if row else (None, None)

def upgrade():
    # 1) Assurer un type indexable pour dossier.procedures
    dt, clen = _col_info('dossier', 'procedures')
    if dt in ('text', 'mediumtext', 'longtext'):
        # convertir en VARCHAR(191) (utf8mb4-safe pour index)
        op.alter_column('dossier', 'procedures',
                        existing_type=sa.Text(),
                        type_=sa.String(length=191),
                        existing_nullable=True)

    # 2) Créer l’unique composite (si pas déjà présent)
    conn = op.get_bind()
    exists = conn.execute(sa.text("""
        SELECT COUNT(*)
        FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
        WHERE TABLE_SCHEMA = DATABASE()
          AND TABLE_NAME = 'dossier'
          AND CONSTRAINT_TYPE = 'UNIQUE'
          AND CONSTRAINT_NAME = 'uq_dossier_client_numero_procedure'
    """)).scalar()

    if not exists:
        op.create_unique_constraint(
            'uq_dossier_client_numero_procedure',
            'dossier',
            ['client_id', 'numero', 'procedures']
        )

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # with op.batch_alter_table('dossier', schema=None) as batch_op:
    #     batch_op.create_unique_constraint('uq_dossier_client_numero_procedure', ['client_id', 'numero', 'procedures'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('two_factor_enabled', mysql.TINYINT(display_width=1), nullable=False))
        batch_op.add_column(sa.Column('two_factor_method', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('two_factor_secret', sa.String(length=32), nullable=True))
        batch_op.add_column(sa.Column('two_factor_backup', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('last_2fa_at', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('last_2fa_at')
        batch_op.drop_column('two_factor_backup')
        batch_op.drop_column('two_factor_secret')
        batch_op.drop_column('two_factor_method')
        batch_op.drop_column('two_factor_enabled')

    with op.batch_alter_table('dossier', schema=None) as batch_op:
        batch_op.drop_constraint('uq_dossier_client_numero_procedure', type_='unique')

    # ### end Alembic commands ###
